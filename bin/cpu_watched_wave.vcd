$date
	Fri Nov 27 21:19:33 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 1 ! hlt $end
$var wire 16 " pc [15:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst_n $end
$scope module iCPU $end
$var wire 3 % ALUOp [2:0] $end
$var wire 2 & ALUsrc [1:0] $end
$var wire 1 ' Branch $end
$var wire 1 ( MemRead $end
$var wire 1 ) MemWrite $end
$var wire 1 * MemtoReg $end
$var wire 1 + N $end
$var wire 16 , R0 [15:0] $end
$var wire 16 - R1 [15:0] $end
$var wire 16 . R10 [15:0] $end
$var wire 16 / R11 [15:0] $end
$var wire 16 0 R12 [15:0] $end
$var wire 16 1 R13 [15:0] $end
$var wire 16 2 R14 [15:0] $end
$var wire 16 3 R15 [15:0] $end
$var wire 16 4 R2 [15:0] $end
$var wire 16 5 R3 [15:0] $end
$var wire 16 6 R4 [15:0] $end
$var wire 16 7 R5 [15:0] $end
$var wire 16 8 R6 [15:0] $end
$var wire 16 9 R7 [15:0] $end
$var wire 16 : R8 [15:0] $end
$var wire 16 ; R9 [15:0] $end
$var wire 2 < RegDst [1:0] $end
$var wire 1 = RegWrite $end
$var wire 2 > ShfOp [1:0] $end
$var wire 1 ? V $end
$var wire 1 @ Z $end
$var wire 4 A addr_w [3:0] $end
$var wire 16 B alu_data_r1 [15:0] $end
$var wire 16 C alu_data_r2 [15:0] $end
$var wire 16 D alu_result [15:0] $end
$var wire 1 E as $end
$var wire 1 F call $end
$var wire 1 G change_en_VN $end
$var wire 1 H change_en_Z $end
$var wire 1 I clk $end
$var wire 1 J d_rdy $end
$var wire 16 K data_r0 [15:0] $end
$var wire 16 L data_r1 [15:0] $end
$var wire 16 M data_r2 [15:0] $end
$var wire 16 N data_w [15:0] $end
$var wire 16 O data_wb [15:0] $end
$var wire 1 P doJump $end
$var wire 16 Q ex_mem_ALU_result [15:0] $end
$var wire 1 R ex_mem_Branch $end
$var wire 3 S ex_mem_BranchType [2:0] $end
$var wire 1 T ex_mem_MemRead $end
$var wire 1 U ex_mem_MemWrite $end
$var wire 1 V ex_mem_MemtoReg $end
$var wire 1 W ex_mem_N $end
$var wire 4 X ex_mem_Rd [3:0] $end
$var wire 1 Y ex_mem_RegWrite $end
$var wire 1 Z ex_mem_V $end
$var wire 1 [ ex_mem_Z $end
$var wire 12 \ ex_mem_address [11:0] $end
$var wire 1 ] ex_mem_call $end
$var wire 1 ^ ex_mem_clean $end
$var wire 16 _ ex_mem_data_r2 [15:0] $end
$var wire 16 ` ex_mem_pcaddr [15:0] $end
$var wire 1 a ex_mem_ret $end
$var wire 16 b ex_mem_retAddr [15:0] $end
$var wire 1 c ex_mem_run $end
$var wire 1 d ex_mem_we $end
$var wire 1 e flag_register_N $end
$var wire 1 f flag_register_V $end
$var wire 1 g flag_register_Z $end
$var wire 2 h forwardA [1:0] $end
$var wire 2 i forwardB [1:0] $end
$var wire 1 j hc_ex_mem_clean $end
$var wire 1 k hc_ex_mem_we $end
$var wire 1 l hc_id_ex_clean $end
$var wire 1 m hc_id_ex_we $end
$var wire 1 n hc_if_id_clean $end
$var wire 1 o hc_if_id_we $end
$var wire 1 p hc_mem_wb_clean $end
$var wire 1 q hc_mem_wb_we $end
$var wire 1 r hc_pc_we $end
$var wire 1 ! hlt $end
$var wire 1 s i_rdy $end
$var wire 3 t id_ex_ALUOp [2:0] $end
$var wire 2 u id_ex_ALUSrc [1:0] $end
$var wire 1 v id_ex_Branch $end
$var wire 3 w id_ex_BranchType [2:0] $end
$var wire 1 x id_ex_MemRead $end
$var wire 1 y id_ex_MemWrite $end
$var wire 1 z id_ex_MemtoReg $end
$var wire 4 { id_ex_Rd [3:0] $end
$var wire 1 | id_ex_RegWrite $end
$var wire 2 } id_ex_ShfOp [1:0] $end
$var wire 12 ~ id_ex_address [11:0] $end
$var wire 1 !" id_ex_as $end
$var wire 1 "" id_ex_call $end
$var wire 1 #" id_ex_change_en_VN $end
$var wire 1 $" id_ex_change_en_Z $end
$var wire 1 %" id_ex_clean $end
$var wire 16 &" id_ex_data_r0 [15:0] $end
$var wire 16 '" id_ex_data_r1 [15:0] $end
$var wire 16 (" id_ex_data_r2 [15:0] $end
$var wire 2 )" id_ex_forwardA [1:0] $end
$var wire 2 *" id_ex_forwardB [1:0] $end
$var wire 1 +" id_ex_lhb $end
$var wire 1 ," id_ex_llb $end
$var wire 16 -" id_ex_pcaddr [15:0] $end
$var wire 1 ." id_ex_ret $end
$var wire 1 /" id_ex_run $end
$var wire 1 0" id_ex_we $end
$var wire 1 1" if_id_clean $end
$var wire 16 2" if_id_instr [15:0] $end
$var wire 16 3" if_id_pcaddr [15:0] $end
$var wire 1 4" if_id_we $end
$var wire 16 5" instr [15:0] $end
$var wire 1 6" lhb $end
$var wire 1 7" llb $end
$var wire 16 8" mem_out [15:0] $end
$var wire 16 9" mem_wb_ALU_result [15:0] $end
$var wire 16 :" mem_wb_Mem_out [15:0] $end
$var wire 1 ;" mem_wb_MemtoReg $end
$var wire 4 <" mem_wb_Rd [3:0] $end
$var wire 1 =" mem_wb_RegWrite $end
$var wire 1 >" mem_wb_call $end
$var wire 1 ?" mem_wb_clean $end
$var wire 16 @" mem_wb_pcaddr [15:0] $end
$var wire 1 A" mem_wb_run $end
$var wire 1 B" mem_wb_we $end
$var wire 16 C" pc [15:0] $end
$var wire 16 D" pc_jump [15:0] $end
$var wire 16 E" pc_next [15:0] $end
$var wire 16 F" pc_plus1 [15:0] $end
$var wire 16 G" pc_reg_in [15:0] $end
$var wire 1 H" ret $end
$var wire 1 I" rst_n $end
$var wire 1 J" run $end
$var reg 1 K" pc_reg_en $end
$scope module pc_register $end
$var wire 1 I clk $end
$var wire 1 L" en $end
$var wire 16 M" pc_next [15:0] $end
$var reg 16 N" pc_curr [15:0] $end
$upscope $end
$scope module IF_ID_Reg $end
$var wire 1 1" clear $end
$var wire 1 I clk $end
$var wire 16 O" instr_next [15:0] $end
$var wire 16 P" pc_addr_next [15:0] $end
$var wire 1 4" write_en $end
$var reg 16 Q" instr [15:0] $end
$var reg 16 R" pc_addr [15:0] $end
$upscope $end
$scope module registers $end
$var wire 4 S" addr_r1 [3:0] $end
$var wire 4 T" addr_r2 [3:0] $end
$var wire 4 U" addr_w [3:0] $end
$var wire 1 I clk $end
$var wire 16 V" data_r0 [15:0] $end
$var wire 16 W" data_r1 [15:0] $end
$var wire 16 X" data_r2 [15:0] $end
$var wire 16 Y" data_w [15:0] $end
$var wire 16 Z" dr0 [15:0] $end
$var wire 16 [" dr1 [15:0] $end
$var wire 16 \" dr10 [15:0] $end
$var wire 16 ]" dr11 [15:0] $end
$var wire 16 ^" dr12 [15:0] $end
$var wire 16 _" dr13 [15:0] $end
$var wire 16 `" dr14 [15:0] $end
$var wire 16 a" dr15 [15:0] $end
$var wire 16 b" dr2 [15:0] $end
$var wire 16 c" dr3 [15:0] $end
$var wire 16 d" dr4 [15:0] $end
$var wire 16 e" dr5 [15:0] $end
$var wire 16 f" dr6 [15:0] $end
$var wire 16 g" dr7 [15:0] $end
$var wire 16 h" dr8 [15:0] $end
$var wire 16 i" dr9 [15:0] $end
$var wire 1 =" write_en $end
$upscope $end
$scope module decoder $end
$var wire 1 G change_en_VN $end
$var wire 1 H change_en_Z $end
$var wire 4 j" op [3:0] $end
$var reg 3 k" ALUOp [2:0] $end
$var reg 2 l" ALUsrc [1:0] $end
$var reg 1 m" Branch $end
$var reg 1 n" MemRead $end
$var reg 1 o" MemWrite $end
$var reg 1 p" MemtoReg $end
$var reg 2 q" RegDst [1:0] $end
$var reg 1 r" RegWrite $end
$var reg 2 s" ShfOp [1:0] $end
$var reg 1 t" as $end
$var reg 1 u" call $end
$var reg 1 v" lhb $end
$var reg 1 w" llb $end
$var reg 1 x" ret $end
$var reg 1 y" run $end
$upscope $end
$scope module ID_EX_Reg $end
$var wire 3 z" ALUOp_next [2:0] $end
$var wire 2 {" ALUSrc_next [1:0] $end
$var wire 12 |" Address_next [11:0] $end
$var wire 3 }" BranchType_next [2:0] $end
$var wire 1 ' Branch_next $end
$var wire 1 ( MemRead_next $end
$var wire 1 ) MemWrite_next $end
$var wire 1 * MemtoReg_next $end
$var wire 4 ~" Rd_next [3:0] $end
$var wire 2 !# RegDst_next [1:0] $end
$var wire 1 = RegWrite_next $end
$var wire 2 "# ShfOp_next [1:0] $end
$var wire 1 E as_next $end
$var wire 1 F call_next $end
$var wire 1 G change_en_VN_next $end
$var wire 1 H change_en_Z_next $end
$var wire 1 %" clear $end
$var wire 1 I clk $end
$var wire 16 ## data_r0_next [15:0] $end
$var wire 16 $# data_r1_next [15:0] $end
$var wire 16 %# data_r2_next [15:0] $end
$var wire 2 &# forwardA_next [1:0] $end
$var wire 2 '# forwardB_next [1:0] $end
$var wire 1 6" lhb_next $end
$var wire 1 7" llb_next $end
$var wire 16 (# pc_addr_next [15:0] $end
$var wire 1 H" ret_next $end
$var wire 1 J" run_next $end
$var wire 1 0" write_en $end
$var reg 3 )# ALUOp [2:0] $end
$var reg 2 *# ALUSrc [1:0] $end
$var reg 12 +# Address [11:0] $end
$var reg 1 ,# Branch $end
$var reg 3 -# BranchType [2:0] $end
$var reg 1 .# MemRead $end
$var reg 1 /# MemWrite $end
$var reg 1 0# MemtoReg $end
$var reg 4 1# Rd [3:0] $end
$var reg 2 2# RegDst [1:0] $end
$var reg 1 3# RegWrite $end
$var reg 2 4# ShfOp [1:0] $end
$var reg 1 5# as $end
$var reg 1 6# call $end
$var reg 1 7# change_en_VN $end
$var reg 1 8# change_en_Z $end
$var reg 16 9# data_r0 [15:0] $end
$var reg 16 :# data_r1 [15:0] $end
$var reg 16 ;# data_r2 [15:0] $end
$var reg 2 <# forwardA [1:0] $end
$var reg 2 =# forwardB [1:0] $end
$var reg 1 ># lhb $end
$var reg 1 ?# llb $end
$var reg 16 @# pc_addr [15:0] $end
$var reg 1 A# ret $end
$var reg 1 B# run $end
$upscope $end
$scope module alu $end
$var wire 16 C# ALUin1 [15:0] $end
$var wire 16 D# ALUin2 [15:0] $end
$var wire 3 E# ALUop [2:0] $end
$var wire 16 F# ALUout [15:0] $end
$var wire 2 G# ALUsrc [1:0] $end
$var wire 1 + N $end
$var wire 2 H# Shfop [1:0] $end
$var wire 1 ? V $end
$var wire 1 @ Z $end
$var wire 1 !" as $end
$var wire 16 I# data_r0 [15:0] $end
$var wire 16 J# data_r1 [15:0] $end
$var wire 16 K# data_r2 [15:0] $end
$var wire 16 L# highbyte [15:0] $end
$var wire 8 M# instr [7:0] $end
$var wire 16 N# instr_ext4 [15:0] $end
$var wire 16 O# instr_ext8 [15:0] $end
$var wire 1 +" lhb $end
$var wire 1 ," llb $end
$var wire 16 P# result [15:0] $end
$var wire 16 Q# sh_llb [15:0] $end
$var wire 16 R# sh_out [15:0] $end
$var reg 4 S# ALU_sigs [3:0] $end
$scope module sign_ext4 $end
$var wire 16 T# A [15:0] $end
$var wire 16 U# B [15:0] $end
$var wire 4 V# shf [3:0] $end
$var wire 2 W# sigs [1:0] $end
$var wire 16 X# sll [15:0] $end
$var wire 16 Y# sra [15:0] $end
$var wire 16 Z# srl [15:0] $end
$upscope $end
$scope module sign_ext8 $end
$var wire 16 [# A [15:0] $end
$var wire 16 \# B [15:0] $end
$var wire 4 ]# shf [3:0] $end
$var wire 2 ^# sigs [1:0] $end
$var wire 16 _# sll [15:0] $end
$var wire 16 `# sra [15:0] $end
$var wire 16 a# srl [15:0] $end
$upscope $end
$scope module ALU $end
$var wire 16 b# A [15:0] $end
$var wire 16 c# Ar_out [15:0] $end
$var wire 16 d# B [15:0] $end
$var wire 16 e# Bin [15:0] $end
$var wire 16 f# C_in [15:0] $end
$var wire 16 g# C_out [15:0] $end
$var wire 16 h# C_out_not [15:0] $end
$var wire 16 i# Data_out [15:0] $end
$var wire 1 + N $end
$var wire 16 j# Sat [15:0] $end
$var wire 4 k# Sigs [3:0] $end
$var wire 16 l# Sum [15:0] $end
$var wire 1 ? V $end
$var wire 1 m# V_h $end
$var wire 1 n# V_l $end
$var wire 1 o# Z $end
$var wire 1 p# not_f7 $end
$var wire 1 q# par_sel_b8 $end
$var wire 1 r# set_nv_flag $end
$scope module ofH $end
$var wire 1 s# a $end
$var wire 1 t# b $end
$var wire 1 u# f $end
$var wire 1 m# v $end
$upscope $end
$scope module ofL $end
$var wire 1 v# a $end
$var wire 1 w# b $end
$var wire 1 x# f $end
$var wire 1 n# v $end
$upscope $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module preb_i $end
$var wire 1 y# a $end
$var wire 1 z# not_a $end
$var wire 1 {# out $end
$var wire 1 |# sel $end
$upscope $end
$scope module fa_0 $end
$var wire 1 }# a $end
$var wire 1 ~# b $end
$var wire 1 !$ c_in $end
$var wire 1 "$ c_out $end
$var wire 1 #$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 $$ a $end
$var wire 1 %$ not_a $end
$var wire 1 &$ out $end
$var wire 1 '$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 ($ a $end
$var wire 1 )$ b $end
$var wire 1 *$ c_in $end
$var wire 1 +$ c_out $end
$var wire 1 ,$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 -$ a $end
$var wire 1 .$ not_a $end
$var wire 1 /$ out $end
$var wire 1 0$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 1$ a $end
$var wire 1 2$ b $end
$var wire 1 3$ c_in $end
$var wire 1 4$ c_out $end
$var wire 1 5$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 6$ a $end
$var wire 1 7$ not_a $end
$var wire 1 8$ out $end
$var wire 1 9$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 :$ a $end
$var wire 1 ;$ b $end
$var wire 1 <$ c_in $end
$var wire 1 =$ c_out $end
$var wire 1 >$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 ?$ a $end
$var wire 1 @$ not_a $end
$var wire 1 A$ out $end
$var wire 1 B$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 C$ a $end
$var wire 1 D$ b $end
$var wire 1 E$ c_in $end
$var wire 1 F$ c_out $end
$var wire 1 G$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 H$ a $end
$var wire 1 I$ not_a $end
$var wire 1 J$ out $end
$var wire 1 K$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 L$ a $end
$var wire 1 M$ b $end
$var wire 1 N$ c_in $end
$var wire 1 O$ c_out $end
$var wire 1 P$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 Q$ a $end
$var wire 1 R$ not_a $end
$var wire 1 S$ out $end
$var wire 1 T$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 W$ c_in $end
$var wire 1 X$ c_out $end
$var wire 1 Y$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 Z$ a $end
$var wire 1 [$ not_a $end
$var wire 1 \$ out $end
$var wire 1 ]$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 ^$ a $end
$var wire 1 _$ b $end
$var wire 1 `$ c_in $end
$var wire 1 a$ c_out $end
$var wire 1 b$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000000001 $end
$scope begin genblk4 $end
$scope module preb_i $end
$var wire 1 c$ a $end
$var wire 1 d$ not_a $end
$var wire 1 e$ out $end
$var wire 1 f$ sel $end
$upscope $end
$scope module fa_8 $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 i$ c_in $end
$var wire 1 j$ c_out $end
$var wire 1 k$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 l$ a $end
$var wire 1 m$ not_a $end
$var wire 1 n$ out $end
$var wire 1 o$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 p$ a $end
$var wire 1 q$ b $end
$var wire 1 r$ c_in $end
$var wire 1 s$ c_out $end
$var wire 1 t$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 u$ a $end
$var wire 1 v$ not_a $end
$var wire 1 w$ out $end
$var wire 1 x$ sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 y$ a $end
$var wire 1 z$ b $end
$var wire 1 {$ c_in $end
$var wire 1 |$ c_out $end
$var wire 1 }$ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 ~$ a $end
$var wire 1 !% not_a $end
$var wire 1 "% out $end
$var wire 1 #% sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 $% a $end
$var wire 1 %% b $end
$var wire 1 &% c_in $end
$var wire 1 '% c_out $end
$var wire 1 (% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 )% a $end
$var wire 1 *% not_a $end
$var wire 1 +% out $end
$var wire 1 ,% sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 -% a $end
$var wire 1 .% b $end
$var wire 1 /% c_in $end
$var wire 1 0% c_out $end
$var wire 1 1% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 2% a $end
$var wire 1 3% not_a $end
$var wire 1 4% out $end
$var wire 1 5% sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 6% a $end
$var wire 1 7% b $end
$var wire 1 8% c_in $end
$var wire 1 9% c_out $end
$var wire 1 :% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000000000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 ;% a $end
$var wire 1 <% not_a $end
$var wire 1 =% out $end
$var wire 1 >% sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 ?% a $end
$var wire 1 @% b $end
$var wire 1 A% c_in $end
$var wire 1 B% c_out $end
$var wire 1 C% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000001 $end
$scope begin genblk5 $end
$scope module preb_i $end
$var wire 1 D% a $end
$var wire 1 E% not_a $end
$var wire 1 F% out $end
$var wire 1 G% sel $end
$upscope $end
$scope module fa_i $end
$var wire 1 H% a $end
$var wire 1 I% b $end
$var wire 1 J% c_in $end
$var wire 1 K% c_out $end
$var wire 1 L% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk6 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 M% MSB [1:0] $end
$var wire 2 N% V [1:0] $end
$var wire 1 O% arith_out $end
$var wire 1 P% fi $end
$var wire 1 Q% msb_sel $end
$var wire 1 R% s1 $end
$var wire 1 S% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk06 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 T% MSB [1:0] $end
$var wire 2 U% V [1:0] $end
$var wire 1 V% arith_out $end
$var wire 1 W% fi $end
$var wire 1 X% msb_sel $end
$var wire 1 Y% s1 $end
$var wire 1 Z% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk006 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 [% MSB [1:0] $end
$var wire 2 \% V [1:0] $end
$var wire 1 ]% arith_out $end
$var wire 1 ^% fi $end
$var wire 1 _% msb_sel $end
$var wire 1 `% s1 $end
$var wire 1 a% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0006 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 b% MSB [1:0] $end
$var wire 2 c% V [1:0] $end
$var wire 1 d% arith_out $end
$var wire 1 e% fi $end
$var wire 1 f% msb_sel $end
$var wire 1 g% s1 $end
$var wire 1 h% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00006 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 i% MSB [1:0] $end
$var wire 2 j% V [1:0] $end
$var wire 1 k% arith_out $end
$var wire 1 l% fi $end
$var wire 1 m% msb_sel $end
$var wire 1 n% s1 $end
$var wire 1 o% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000006 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 p% MSB [1:0] $end
$var wire 2 q% V [1:0] $end
$var wire 1 r% arith_out $end
$var wire 1 s% fi $end
$var wire 1 t% msb_sel $end
$var wire 1 u% s1 $end
$var wire 1 v% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000006 $end
$scope begin genblk7 $end
$scope module satu_i $end
$var wire 2 w% MSB [1:0] $end
$var wire 2 x% V [1:0] $end
$var wire 1 y% arith_out $end
$var wire 1 z% fi $end
$var wire 1 {% msb_sel $end
$var wire 1 |% s1 $end
$var wire 1 }% v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000006 $end
$scope begin genblk9 $end
$scope module satu_i $end
$var wire 2 ~% MSB [1:0] $end
$var wire 2 !& V [1:0] $end
$var wire 1 "& arith_out $end
$var wire 1 #& fi $end
$var wire 1 $& msb_sel $end
$var wire 1 %& s1 $end
$var wire 1 && v_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk0000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk00000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk000000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk00000000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk000000000000006 $end
$scope begin genblk11 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000006 $end
$scope begin genblk12 $end
$scope module satu_i $end
$var wire 1 '& a $end
$var wire 1 (& not_a $end
$var wire 1 )& out $end
$var wire 1 m# sel $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk13 $end
$upscope $end
$scope begin genblk0313 $end
$upscope $end
$scope begin genblk001313 $end
$upscope $end
$scope begin genblk00031313 $end
$upscope $end
$scope begin genblk0000131313 $end
$upscope $end
$scope begin genblk000003131313 $end
$upscope $end
$scope begin genblk00000013131313 $end
$upscope $end
$scope begin genblk0000000313131313 $end
$upscope $end
$scope begin genblk000000001313131313 $end
$upscope $end
$scope begin genblk00000000031313131313 $end
$upscope $end
$scope begin genblk0000000000131313131313 $end
$upscope $end
$scope begin genblk000000000003131313131313 $end
$upscope $end
$scope begin genblk00000000000013131313131313 $end
$upscope $end
$scope begin genblk0000000000000313131313131313 $end
$upscope $end
$scope begin genblk000000000000001313131313131313 $end
$upscope $end
$scope begin genblk00000000000000031313131313131313 $end
$upscope $end
$scope begin genblk14 $end
$upscope $end
$scope begin genblk0414 $end
$upscope $end
$scope begin genblk001414 $end
$upscope $end
$scope begin genblk00041414 $end
$upscope $end
$scope begin genblk0000141414 $end
$upscope $end
$scope begin genblk000004141414 $end
$upscope $end
$scope begin genblk00000014141414 $end
$upscope $end
$scope begin genblk0000000414141414 $end
$upscope $end
$scope begin genblk000000001414141414 $end
$upscope $end
$scope begin genblk00000000041414141414 $end
$upscope $end
$scope begin genblk0000000000141414141414 $end
$upscope $end
$scope begin genblk000000000004141414141414 $end
$upscope $end
$scope begin genblk00000000000014141414141414 $end
$upscope $end
$scope begin genblk0000000000000414141414141414 $end
$upscope $end
$scope begin genblk000000000000001414141414141414 $end
$upscope $end
$scope begin genblk00000000000000041414141414141414 $end
$upscope $end
$upscope $end
$scope module shifter $end
$var wire 16 *& A [15:0] $end
$var wire 16 +& B [15:0] $end
$var wire 4 ,& shf [3:0] $end
$var wire 2 -& sigs [1:0] $end
$var wire 16 .& sll [15:0] $end
$var wire 16 /& sra [15:0] $end
$var wire 16 0& srl [15:0] $end
$upscope $end
$upscope $end
$scope module flag_regi $end
$var wire 1 + Nin $end
$var wire 1 ? Vin $end
$var wire 1 @ Zin $end
$var wire 1 #" change_en_VN $end
$var wire 1 $" change_en_Z $end
$var wire 1 I clk $end
$var reg 1 1& N $end
$var reg 1 2& V $end
$var reg 1 3& Z $end
$upscope $end
$scope module EX_MEM_Reg $end
$var wire 16 4& ALU_result_next [15:0] $end
$var wire 12 5& Address_next [11:0] $end
$var wire 3 6& BranchType_next [2:0] $end
$var wire 1 v Branch_next $end
$var wire 1 x MemRead_next $end
$var wire 1 y MemWrite_next $end
$var wire 1 z MemtoReg_next $end
$var wire 1 e N_next $end
$var wire 4 7& Rd_next [3:0] $end
$var wire 2 8& RegDst_next [1:0] $end
$var wire 1 | RegWrite_next $end
$var wire 1 f V_next $end
$var wire 1 g Z_next $end
$var wire 1 "" call_next $end
$var wire 1 ^ clear $end
$var wire 1 I clk $end
$var wire 16 9& data_r2_next [15:0] $end
$var wire 16 :& pc_addr_next [15:0] $end
$var wire 16 ;& retAddr_next [15:0] $end
$var wire 1 ." ret_next $end
$var wire 1 /" run_next $end
$var wire 1 d write_en $end
$var reg 16 <& ALU_result [15:0] $end
$var reg 12 =& Address [11:0] $end
$var reg 1 >& Branch $end
$var reg 3 ?& BranchType [2:0] $end
$var reg 1 @& MemRead $end
$var reg 1 A& MemWrite $end
$var reg 1 B& MemtoReg $end
$var reg 1 C& N $end
$var reg 4 D& Rd [3:0] $end
$var reg 2 E& RegDst [1:0] $end
$var reg 1 F& RegWrite $end
$var reg 1 G& V $end
$var reg 1 H& Z $end
$var reg 1 I& call $end
$var reg 16 J& data_r2 [15:0] $end
$var reg 16 K& pc_addr [15:0] $end
$var reg 1 L& ret $end
$var reg 16 M& retAddr [15:0] $end
$var reg 1 N& run $end
$upscope $end
$scope module calc_next $end
$var wire 1 W N $end
$var wire 1 Z V $end
$var wire 1 [ Z $end
$var wire 9 O& addr_brch [8:0] $end
$var wire 16 P& addr_brch_ext [15:0] $end
$var wire 12 Q& addr_call [11:0] $end
$var wire 16 R& addr_mid1 [15:0] $end
$var wire 16 S& addr_mid2 [15:0] $end
$var wire 16 T& addr_ret [15:0] $end
$var wire 1 U& br_cond $end
$var wire 1 ] call $end
$var wire 1 R ctrl_br $end
$var wire 3 V& ctrl_br_type [2:0] $end
$var wire 1 W& doBranch $end
$var wire 1 P doJump $end
$var wire 16 X& pc_brch [15:0] $end
$var wire 16 Y& pc_call [15:0] $end
$var wire 16 Z& pc_next [15:0] $end
$var wire 16 [& pc_plus1 [15:0] $end
$var wire 1 a ret $end
$scope module brch_ext $end
$var wire 16 \& A [15:0] $end
$var wire 16 ]& B [15:0] $end
$var wire 4 ^& shf [3:0] $end
$var wire 2 _& sigs [1:0] $end
$var wire 16 `& sll [15:0] $end
$var wire 16 a& sra [15:0] $end
$var wire 16 b& srl [15:0] $end
$upscope $end
$scope module call_ext $end
$var wire 16 c& A [15:0] $end
$var wire 16 d& B [15:0] $end
$var wire 4 e& shf [3:0] $end
$var wire 2 f& sigs [1:0] $end
$var wire 16 g& sll [15:0] $end
$var wire 16 h& sra [15:0] $end
$var wire 16 i& srl [15:0] $end
$upscope $end
$scope module br_det $end
$var wire 1 W N $end
$var wire 1 Z V $end
$var wire 1 [ Z $end
$var wire 3 j& cont_br [2:0] $end
$var reg 1 k& brch $end
$upscope $end
$upscope $end
$scope module MEM_WB_Reg $end
$var wire 16 l& ALU_result_next [15:0] $end
$var wire 16 m& Mem_out_next [15:0] $end
$var wire 1 V MemtoReg_next $end
$var wire 4 n& Rd_next [3:0] $end
$var wire 2 o& RegDst_next [1:0] $end
$var wire 1 Y RegWrite_next $end
$var wire 1 ] call_next $end
$var wire 1 ?" clear $end
$var wire 1 I clk $end
$var wire 16 p& pc_addr_next [15:0] $end
$var wire 1 c run_next $end
$var wire 1 B" write_en $end
$var reg 16 q& ALU_result [15:0] $end
$var reg 16 r& Mem_out [15:0] $end
$var reg 1 s& MemtoReg $end
$var reg 4 t& Rd [3:0] $end
$var reg 2 u& RegDst [1:0] $end
$var reg 1 v& RegWrite $end
$var reg 1 w& call $end
$var reg 16 x& pc_addr [15:0] $end
$var reg 1 y& run $end
$upscope $end
$scope module hazard_ctrl $end
$var wire 1 ' Branch $end
$var wire 1 F call $end
$var wire 1 z& clear $end
$var wire 1 J d_rdy $end
$var wire 1 P doJump $end
$var wire 1 {& ex_matchA $end
$var wire 1 |& ex_matchB $end
$var wire 4 }& ex_mem_Rd [3:0] $end
$var wire 1 Y ex_mem_RegWrite $end
$var wire 1 j ex_mem_clean $end
$var wire 1 k ex_mem_write_en $end
$var wire 2 ~& forwardA [1:0] $end
$var wire 2 !' forwardB [1:0] $end
$var wire 1 s i_rdy $end
$var wire 1 x id_ex_MemRead $end
$var wire 4 "' id_ex_Rd [3:0] $end
$var wire 1 | id_ex_RegWrite $end
$var wire 1 l id_ex_clean $end
$var wire 1 m id_ex_write_en $end
$var wire 4 #' if_id_Rs [3:0] $end
$var wire 4 $' if_id_Rt [3:0] $end
$var wire 1 n if_id_clean $end
$var wire 1 o if_id_write_en $end
$var wire 1 6" lhb $end
$var wire 1 7" llb $end
$var wire 1 %' mem_matchA $end
$var wire 1 &' mem_matchB $end
$var wire 1 p mem_wb_clean $end
$var wire 1 q mem_wb_write_en $end
$var wire 1 '' nonDpd $end
$var wire 1 r pc_write_en $end
$var wire 1 H" ret $end
$var wire 1 (' rsOnly $end
$var wire 1 J" run $end
$var wire 1 )' stall $end
$var wire 1 *' stall_all $end
$upscope $end
$scope module mem $end
$var wire 1 I clk $end
$var wire 16 +' d_addr [15:0] $end
$var wire 14 ,' d_addr_ctrl [13:0] $end
$var wire 64 -' d_data_in [63:0] $end
$var wire 64 .' d_data_out [63:0] $end
$var wire 64 /' d_data_wrt [63:0] $end
$var wire 64 0' d_data_wrt0 [63:0] $end
$var wire 64 1' d_data_wrt1 [63:0] $end
$var wire 64 2' d_data_wrt2 [63:0] $end
$var wire 64 3' d_data_wrt3 [63:0] $end
$var wire 1 J d_rdy $end
$var wire 8 4' d_tag_out [7:0] $end
$var wire 1 5' dcache_re $end
$var wire 1 6' dcache_we $end
$var wire 1 7' dhit $end
$var wire 1 8' di_active $end
$var wire 1 9' dirty $end
$var wire 16 :' i_addr [15:0] $end
$var wire 14 ;' i_addr_ctrl [13:0] $end
$var wire 64 <' i_data_out [63:0] $end
$var wire 1 s i_rdy $end
$var wire 8 =' i_tag_out [7:0] $end
$var wire 1 >' icache_re $end
$var wire 1 ?' icache_we $end
$var wire 1 @' ihit $end
$var wire 16 A' instr [15:0] $end
$var wire 14 B' mem_addr [13:0] $end
$var wire 64 C' mem_rdata [63:0] $end
$var wire 1 D' mem_re $end
$var wire 64 E' mem_wdata [63:0] $end
$var wire 1 F' mem_we $end
$var wire 1 G' memrdy $end
$var wire 16 H' rd_data [15:0] $end
$var wire 1 T re $end
$var wire 1 I" rst_n $end
$var wire 1 U we $end
$var wire 16 I' wrt_data [15:0] $end
$scope module icache $end
$var wire 14 J' addr [13:0] $end
$var wire 1 I clk $end
$var wire 1 K' dirty $end
$var wire 1 @' hit $end
$var wire 64 L' rd_data [63:0] $end
$var wire 1 >' re $end
$var wire 1 I" rst_n $end
$var wire 8 M' tag_out [7:0] $end
$var wire 1 N' wdirty $end
$var wire 1 ?' we $end
$var wire 1 O' we_filt $end
$var wire 64 P' wr_data [63:0] $end
$var reg 74 Q' line [73:0] $end
$var reg 1 R' we_del $end
$var reg 7 S' x [6:0] $end
$upscope $end
$scope module dcache $end
$var wire 14 T' addr [13:0] $end
$var wire 1 I clk $end
$var wire 1 9' dirty $end
$var wire 1 7' hit $end
$var wire 64 U' rd_data [63:0] $end
$var wire 1 5' re $end
$var wire 1 I" rst_n $end
$var wire 8 V' tag_out [7:0] $end
$var wire 1 6' wdirty $end
$var wire 1 6' we $end
$var wire 1 W' we_filt $end
$var wire 64 X' wr_data [63:0] $end
$var reg 74 Y' line [73:0] $end
$var reg 1 Z' we_del $end
$var reg 7 [' x [6:0] $end
$upscope $end
$scope module main_mem $end
$var wire 14 \' addr [13:0] $end
$var wire 1 I clk $end
$var wire 1 D' re $end
$var wire 1 I" rst_n $end
$var wire 64 ]' wdata [63:0] $end
$var wire 1 F' we $end
$var reg 14 ^' addr_capture [13:0] $end
$var reg 1 _' clr_cnt $end
$var reg 1 `' int_re $end
$var reg 1 a' int_we $end
$var reg 2 b' nxt_state [1:0] $end
$var reg 64 c' rd_data [63:0] $end
$var reg 1 d' rdy $end
$var reg 2 e' state [1:0] $end
$var reg 2 f' wait_state_cnt [1:0] $end
$upscope $end
$scope module cache_ctrl $end
$var wire 14 g' addr_data [13:0] $end
$var wire 14 h' addr_instr [13:0] $end
$var wire 1 I clk $end
$var wire 1 7' dhit $end
$var wire 1 9' dirty $end
$var wire 1 J drdy $end
$var wire 8 i' dtag_out [7:0] $end
$var wire 1 @' ihit $end
$var wire 1 s irdy $end
$var wire 8 j' itag_out [7:0] $end
$var wire 1 G' memrdy $end
$var wire 1 T re $end
$var wire 1 I" rst_n $end
$var wire 1 U we $end
$var reg 14 k' daddr [13:0] $end
$var reg 1 l' dcache_we $end
$var reg 1 m' di_active $end
$var reg 14 n' iaddr [13:0] $end
$var reg 1 o' icache_we $end
$var reg 1 p' mem_re $end
$var reg 1 q' mem_we $end
$var reg 2 r' next_state [1:0] $end
$var reg 2 s' state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 s'
bx r'
0q'
0p'
0o'
bx n'
xm'
xl'
bx k'
bx j'
bx i'
bx h'
bx g'
b0 f'
b0 e'
1d'
bx c'
b0 b'
0a'
0`'
1_'
bx ^'
bx ]'
bx \'
b1000000 ['
xZ'
bx Y'
bx X'
xW'
bx V'
bx U'
bx T'
b1000000 S'
0R'
bx Q'
bx P'
0O'
0N'
bx M'
bx L'
xK'
bx J'
bx I'
bx H'
1G'
0F'
bx E'
0D'
bx C'
bx B'
bx A'
x@'
0?'
1>'
bx ='
bx <'
bx ;'
bx :'
x9'
x8'
x7'
x6'
15'
bx 4'
bx 3'
bx 2'
bx 1'
bx 0'
bx /'
bx .'
bx -'
bx ,'
bx +'
x*'
0)'
x('
x''
0&'
0%'
bx $'
bx #'
bx "'
b0 !'
b0 ~&
bx }&
0|&
0{&
xz&
xy&
bx x&
xw&
xv&
bx u&
bx t&
xs&
bx r&
bx q&
bx p&
bz o&
bx n&
bx m&
bx l&
xk&
bx j&
b0xxxxxxxxxxxx i&
bx h&
bx00000000 g&
b11 f&
b100 e&
bx d&
bx0000 c&
b0xxxxxxxxx b&
bx a&
bx00000000000000 `&
b11 _&
b111 ^&
bx ]&
bx0000000 \&
bx [&
bx Z&
bx Y&
bx X&
xW&
bx V&
xU&
bx T&
bx S&
bx R&
bx Q&
bx P&
bx O&
xN&
bx M&
xL&
bx K&
bx J&
xI&
xH&
xG&
xF&
bx E&
bx D&
xC&
xB&
xA&
x@&
bx ?&
x>&
bx =&
bx <&
bx ;&
bx :&
bx 9&
bz 8&
bx 7&
bx 6&
bx 5&
bx 4&
x3&
x2&
x1&
bx 0&
bx /&
bx .&
bx -&
bx ,&
bx +&
bx *&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
bx !&
bx ~%
x}%
x|%
x{%
xz%
xy%
bx x%
bx w%
xv%
xu%
xt%
xs%
xr%
bx q%
bx p%
xo%
xn%
xm%
xl%
xk%
bx j%
bx i%
xh%
xg%
xf%
xe%
xd%
bx c%
bx b%
xa%
x`%
x_%
x^%
x]%
bx \%
bx [%
xZ%
xY%
xX%
xW%
xV%
bx U%
bx T%
xS%
xR%
xQ%
xP%
xO%
bx N%
bx M%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
b0xxxxxxxx a#
bx `#
b0 _#
b11 ^#
b1000 ]#
bx \#
bx00000000 [#
b0xxxx Z#
bx Y#
b0 X#
b11 W#
b1100 V#
bx U#
bx000000000000 T#
bx S#
bx R#
bx Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
xB#
xA#
bx @#
x?#
x>#
bx =#
bx <#
bx ;#
bx :#
bx 9#
x8#
x7#
x6#
x5#
bx 4#
x3#
bx 2#
bx 1#
x0#
x/#
x.#
bx -#
x,#
bx +#
bx *#
bx )#
bx (#
b0 '#
b0 &#
bx %#
bx $#
b0 ##
bx "#
bz !#
bx ~"
bx }"
bx |"
bx {"
bx z"
xy"
xx"
xw"
xv"
xu"
xt"
bx s"
xr"
bx q"
xp"
xo"
xn"
xm"
bx l"
bx k"
bx j"
bz i"
bz h"
bz g"
bz f"
bz e"
bz d"
bz c"
bz b"
bz a"
bz `"
bz _"
bz ^"
bz ]"
bz \"
bz ["
b0 Z"
bx Y"
bx X"
bx W"
b0 V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
b0 M"
1L"
1K"
xJ"
0I"
xH"
b0 G"
bx F"
bx E"
bx D"
bx C"
1B"
xA"
bx @"
0?"
x>"
x="
bx <"
x;"
bx :"
bx 9"
bx 8"
x7"
x6"
bx 5"
14"
bx 3"
bx 2"
01"
10"
x/"
x."
bx -"
x,"
x+"
bx *"
bx )"
bx ("
bx '"
bx &"
0%"
x$"
x#"
x""
x!"
bx ~
bx }
x|
bx {
xz
xy
xx
bx w
xv
bx u
bx t
xs
xr
xq
zp
xo
xn
xm
xl
xk
xj
b0 i
b0 h
xg
xf
xe
xd
xc
bx b
xa
bx `
bx _
0^
x]
bx \
x[
xZ
xY
bx X
xW
xV
xU
xT
bx S
xR
bx Q
xP
bx O
bx N
bx M
bx L
b0 K
1J
0I
xH
xG
xF
xE
bx D
bx C
bx B
bx A
x@
x?
bx >
x=
bx <
bz ;
bz :
bz 9
bz 8
bz 7
bz 6
bz 5
bz 4
bz 3
bz 2
bz 1
bz 0
bz /
bz .
bz -
b0 ,
x+
x*
x)
x(
x'
bx &
bx %
0$
0#
bx "
x!
$end
#1
0Z'
0r
04"
0o
0d
0l
00"
0m
0k
0B"
0q
0n
0j
0z&
1*'
0W'
0l'
06'
b11 r'
0s
0@'
0K'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q'
b0 n'
b0 ;'
b0 J'
b1 E"
b0 h'
b1 F"
b1 P"
b0 N"
b0 "
b0 C"
b0 :'
b0 =#
b0 *"
b0 <#
b0 )"
b0 9#
b0 &"
b0 I#
bz 2#
bz u&
b1000000 ['
b1000000 S'
1#
1I
#2
0K"
0L"
b1 G"
b1 M"
1$
1I"
0#
0I
#3
0R'
b0 B'
b0 \'
b10 b'
0d'
0G'
0_'
0o'
0?'
b11 r'
0m'
08'
1p'
1D'
b11 s'
1#
1I
#4
0#
0I
#5
b10 b'
0_'
b1 f'
b10 e'
b0 ^'
1#
1I
#6
0#
0I
#7
b10 b'
0_'
b10 f'
1#
1I
#8
0#
0I
#9
1O'
1R'
1o'
1?'
b0 r'
b1001111000100000001000010001001010110001000001101011111001111111 c'
b1001111000100000001000010001001010110001000001101011111001111111 C'
b1001111000100000001000010001001010110001000001101011111001111111 P'
1d'
1G'
1`'
b0 b'
1_'
b11 f'
1#
1I
#10
0#
0I
#11
xW'
xZ'
0R'
0O'
0`'
xl'
x6'
0o'
0?'
0p'
0D'
b0 e'
b0 f'
b0 s'
1K"
1L"
1r
14"
1o
1d
xl
10"
1m
1k
1B"
1q
xn
xj
xz&
0*'
1s
1@'
b1011111001111111 5"
b1011111001111111 O"
b1011111001111111 A'
b1001111000100000001000010001001010110001000001101011111001111111 <'
b1001111000100000001000010001001010110001000001101011111001111111 L'
b0 ='
b0 M'
b0 j'
b10000000001001111000100000001000010001001010110001000001101011111001111111 Q'
1#
1I
#12
0#
0I
#13
0''
0H
0G
b10 G"
b10 M"
1('
b1110 A
b1110 ~"
b1011000100000110 5"
b1011000100000110 O"
b1011000100000110 A'
b10 E"
b11 s"
b11 >
b11 "#
b0 k"
b0 %
b0 z"
0m"
0'
0x"
0H"
1t"
1E
0v"
06"
1w"
17"
0u"
0F
1y"
1J"
1r"
1=
0p"
0*
0o"
0)
0n"
0(
b0 l"
b0 &
b0 {"
b10 q"
b10 <
b10 F"
b10 P"
b111 $'
b1110 #'
b111001111111 |"
b111 }"
b1011 j"
b111 T"
b1110 S"
b1 N"
b1 "
b1 C"
b1 :'
b1 R"
b1 3"
b1 (#
b1011111001111111 Q"
b1011111001111111 2"
bz E&
1#
1I
#14
0#
0I
#15
0@
b1111111 D
b1111111 P#
b1111111 4&
1r#
b1111111111111111 N#
b1111111111111111 U#
b1111111 Q#
0!$
0~#
0)$
02$
0;$
0D$
0M$
0V$
0_$
0w#
0h$
0q$
0z$
0%%
0.%
07%
0@%
0I%
0t#
b1 A
b1 ~"
b1111111 O#
b1111111 \#
bx0 f#
1z#
0{#
1%$
0&$
1.$
0/$
17$
08$
1@$
0A$
1I$
0J$
1R$
0S$
1[$
0\$
1d$
0e$
1m$
0n$
1v$
0w$
1!%
0"%
1*%
0+%
13%
04%
1<%
0=%
1E%
0F%
b0 e#
b10000100010010 5"
b10000100010010 O"
b10000100010010 A'
b11 G"
b11 M"
b1111000000000000 T#
b1111 Z#
b1111111111111111 Y#
b1111 ,&
bx000000000000000 .&
b0x 0&
0|#
0'$
00$
09$
0B$
0K$
0T$
0]$
0f$
0o$
0x$
0#%
0,%
05%
0>%
0G%
0R%
0Y%
0`%
0g%
0n%
0u%
0|%
0%&
0y#
0$$
0-$
06$
0?$
0H$
0Q$
0Z$
0c$
0l$
0u$
0~$
0)%
02%
0;%
0D%
b11 E"
b1111111 M#
b111111100000000 [#
b1111111 a#
b1111111 `#
b1111111xxxxxxxx L#
b100 S#
b100 k#
b0 D#
b0 d#
b0 $'
b1 #'
b100000110 |"
b0 }"
b0 T"
b0 M
b0 X"
b0 %#
b1 S"
b11 F"
b11 P"
07#
0#"
08#
0$"
b1 @#
b1 -"
b1 :&
b1110 1#
b1110 {
b1110 7&
b1110 "'
b111001111111 +#
b111001111111 ~
b111001111111 5&
1B#
1/"
13#
1|
00#
0z
b111 -#
b111 w
b111 6&
0A#
0."
06#
0""
0,#
0v
0/#
0y
0.#
0x
b0 )#
b0 t
b0 E#
b11 4#
b11 }
b11 H#
b11 -&
b0 *#
b0 u
b0 G#
15#
1!"
0>#
0+"
1?#
1,"
b10 R"
b10 3"
b10 (#
b1011000100000110 Q"
b1011000100000110 2"
b10 N"
b10 "
b10 C"
b10 :'
1#
1I
#16
0#
0I
#17
0Z'
b1 i
b1 '#
b1 !'
1|&
1G
b110 D
b110 P#
b110 4&
07'
09'
b1001111000100000 5"
b1001111000100000 O"
b1001111000100000 A'
0('
1H
b110 N#
b110 U#
b110 Q#
0l
b100 G"
b100 M"
b10 A
b10 ~"
b110 O#
b110 \#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y'
b1 D"
b1 Z&
b10000000 X&
b1111111 P&
b1111111 ]&
0n
0j
0z&
b100 E"
b0 s"
b0 >
b0 "#
b10 k"
b10 %
b10 z"
0m"
0x"
0t"
0E
0v"
0w"
07"
0u"
1y"
1r"
0p"
0o"
0n"
b1 l"
b1 &
b1 {"
b0 q"
b0 <
b1 h
b1 &#
b1 ~&
b110000000000000 T#
b110 Z#
b110 Y#
b110 ,&
bx000000 .&
b0xxxxxxxxxx 0&
b11111 k'
b11111 ,'
b11111 T'
b1 S&
b1111111001111111 Y&
b1111111001111111 d&
0P
0W'
b100 F"
b100 P"
b1 $'
b100010010 |"
b10 j"
b1 T"
bx M
bx X"
bx %#
b0 C
b0 K#
b0 9&
1{&
b110 M#
b11000000000 [#
b110 a#
b110 `#
b110xxxxxxxx L#
b11111 g'
b1 R&
b1111111 O&
b11111110000000 \&
b1100000000000000 `&
b1111111 b&
b1111111 a&
1k&
1U&
0W&
0l'
06'
b11 N"
b11 "
b11 C"
b11 :'
b11 R"
b11 3"
b11 (#
b10000100010010 Q"
b10000100010010 2"
b0 ;#
b0 ("
b10 @#
b10 -"
b10 :&
b1 1#
b1 {
b1 7&
b1 "'
b100000110 +#
b100000110 ~
b100000110 5&
b0 -#
b0 w
b0 6&
b1111111 <&
b1111111 Q
b1111111 l&
b1111111 +'
b1110 D&
b1110 X
b1110 n&
b1110 }&
1N&
1c
1F&
1Y
0B&
0V
b1 K&
b1 `
b1 [&
b1 p&
b111001111111 =&
b1110011111110000 c&
b111111100000000 g&
b111001111111 i&
b1111111001111111 h&
b111001111111 \
b111001111111 Q&
0L&
0a
0I&
0]
b111 ?&
b111 S
b111 V&
b111 j&
0>&
0R
0@&
0T
0A&
0U
1#
1I
#18
0#
0I
#19
0+
1o#
1(&
0)&
0Q%
0X%
0_%
0f%
0m%
0t%
0{%
0$&
0'&
0u#
0L%
1K%
1J%
0C%
1B%
1A%
0:%
19%
18%
01%
10%
1/%
0(%
1'%
1&%
0}$
1|$
1{$
0t$
1s$
1r$
0k$
1j$
1i$
b10 ~%
1p#
0"&
1q#
b0 M%
b0 T%
b0 [%
b0 b%
b0 i%
b0 p%
b0 w%
0#&
0x#
0b$
1a$
1`$
0y%
0z%
0Y$
1X$
1W$
0r%
0s%
0P$
1O$
1N$
0k%
0l%
0G$
1F$
1E$
0d%
0e%
0>$
1=$
1<$
0V%
0]%
0^%
05$
14$
b0 F#
b0 i#
13$
b0 c#
0W%
0K"
0L"
0,$
1+$
0O%
b0 j#
0?
0r
04"
0o
0d
1*$
0n#
b0 N%
0S%
b0 U%
0Z%
b0 \%
0a%
b0 c%
0h%
b0 j%
0o%
b0 q%
0v%
b0 x%
0}%
b0 !&
0&&
0m#
00"
0m
0k
0B"
0q
b0 h#
1*'
0P%
b11 r'
0#$
b0 l#
1"$
b1111111111111111 g#
1z#
0%$
0.$
17$
1@$
1I$
1R$
1[$
1d$
1m$
1v$
1!%
1*%
13%
1<%
1E%
0s
0@'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx X'
0}#
1($
11$
0:$
0C$
0L$
0U$
0^$
0g$
0p$
0y$
0$%
0-%
06%
0?%
0H%
0s#
0v#
b1 R#
b1 +&
0y#
1$$
1-$
06$
0?$
0H$
0Q$
0Z$
0c$
0l$
0u$
0~$
0)%
02%
0;%
0D%
b10 N#
b10 U#
1~#
1!$
0)$
02$
1;$
1D$
1M$
1V$
1_$
1w#
1h$
1q$
1z$
1%%
1.%
17%
1@%
1I%
1t#
0H
0G
bx <'
bx L'
bx ='
bx M'
bx j'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /'
b10 D"
b10 Z&
b1111111100000110 P&
b1111111100000110 ]&
b110 C#
b110 b#
b110 D#
b110 d#
b10010 O#
b10010 \#
1{#
b1111111111111111 f#
0&$
0/$
18$
1A$
1J$
1S$
1\$
1e$
1n$
1w$
1"%
1+%
14%
1=%
1F%
b1111111111111001 e#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q'
b1 B'
b1 \'
b101 G"
b101 M"
b10 S&
b100000110 Y&
b100000110 d&
b1 /&
b110 B
b110 J#
b110 *&
b0 h
b0 &#
b0 ~&
b10000000000000 T#
b10 Z#
b10 Y#
b10 ,&
b11000 .&
b1 0&
1|#
1'$
10$
19$
1B$
1K$
1T$
1]$
1f$
1o$
1x$
1#%
1,%
15%
1>%
1G%
0r"
0=
1o"
1)
0n"
b0 s"
b0 k"
b0 %
b0 z"
0m"
0x"
0t"
0v"
0w"
0u"
1y"
1p"
1*
b10 l"
b10 &
b10 {"
b1 q"
b1 <
b10 A
b10 ~"
bx 5"
bx O"
bx A'
b1 k'
b1 ,'
b1 T'
b1 n'
b1 ;'
b1 J'
b101 E"
b1111111 N
b1111111 Y"
0!
b1111111 O
b1 g'
b10 R&
b100000110 O&
b1000001100000000 \&
b1000000000000000 `&
b100000110 b&
b1111111100000110 a&
xk&
xU&
b110 C
b110 K#
b110 9&
0{&
b10010 M#
b1001000000000 [#
b10010 a#
b10010 `#
b1001000000110 L#
b101 S#
b101 k#
1@
b0 D
b0 P#
b0 4&
b1 Q#
b10 $'
b1110 #'
b111000100000 |"
b111 }"
b1001 j"
b10 T"
b1110 S"
b1 h'
b101 F"
b101 P"
0w&
0>"
b1110 t&
b1110 <"
b1110 U"
b1111111 q&
b1111111 9"
b1 x&
b1 @"
1y&
1A"
1v&
1="
0s&
0;"
b0 J&
bx0000000000000000 0'
bx0000000000000000xxxxxxxxxxxxxxxx 1'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b0 _
b0 I'
b110 <&
b110 Q
b110 l&
b110 +'
b1 D&
b1 X
b1 n&
b1 }&
b10 K&
b1111111100001000 X&
b10 `
b10 [&
b10 p&
b100000110 =&
b1000001100000 c&
b11000000000 g&
b100000110 i&
b100000110 h&
b100000110 \
b100000110 Q&
b0 ?&
b0 S
b0 V&
b0 j&
b1 =#
b1 *"
b1 <#
b1 )"
17#
1#"
18#
1$"
bx ;#
bx ("
b11 @#
b11 -"
b11 :&
b10 1#
b10 {
b10 7&
b10 "'
b100010010 +#
b100010010 ~
b100010010 5&
b10 )#
b10 t
b10 E#
b0 4#
b0 }
b0 H#
b0 -&
b1 *#
b1 u
b1 G#
05#
0!"
0?#
0,"
b100 R"
b100 3"
b100 (#
b1001111000100000 Q"
b1001111000100000 2"
b100 N"
b100 "
b100 C"
b100 :'
1#
1I
#20
13&
1g
01&
0e
02&
0f
b1111111 L
b1111111 W"
b1111111 $#
b1111111 2
b1111111 `"
0#
0I
#21
0R'
b10 b'
0d'
0G'
0_'
0o'
0?'
b11 r'
1p'
1D'
b11 s'
1#
1I
#22
0#
0I
#23
b10 b'
0_'
b10 e'
b1 f'
b1 ^'
1#
1I
#24
0#
0I
#25
b10 b'
0_'
b10 f'
1#
1I
#26
0#
0I
#27
1O'
1R'
1o'
1?'
b0 r'
b1111000000000000000110110001101000000001001110111000111000110000 c'
b1111000000000000000110110001101000000001001110111000111000110000 C'
b1111000000000000000110110001101000000001001110111000111000110000 P'
1d'
1G'
1`'
b0 b'
1_'
b11 f'
1#
1I
#28
0#
0I
#29
0R'
0O'
0o'
0?'
0p'
0D'
b0 b'
1d'
1G'
1_'
0`'
b0 s'
b0 f'
b0 e'
1K"
1L"
1r
14"
1o
1d
10"
1m
1k
1B"
1q
0*'
1s
1@'
b1000111000110000 5"
b1000111000110000 O"
b1000111000110000 A'
b1111000000000000000110110001101000000001001110111000111000110000 <'
b1111000000000000000110110001101000000001001110111000111000110000 L'
b0 ='
b0 M'
b0 j'
b10000000001111000000000000000110110001101000000001001110111000111000110000 Q'
1#
1I
#30
0#
0I
#31
0`$
1z%
1Y$
0X$
0W$
1s%
1P$
0O$
0N$
1l%
1G$
0F$
0E$
1e%
1>$
0=$
0<$
1^%
15$
04$
03$
0+
0@
b1111111 D
b1111111 P#
b1111111 4&
0+$
b1111111 F#
b1111111 i#
0o#
1%$
0i$
1]%
1d%
1k%
1r%
1y%
0?
b1111111 c#
0$$
0*$
0n#
0r$
0{$
0&%
0/%
08%
0A%
0J%
b0 N%
0S%
b0 U%
0Z%
b0 \%
0a%
b0 c%
0h%
b0 j%
0o%
b0 q%
0v%
b0 x%
0}%
b0 !&
0&&
0m#
1V%
1p#
0"&
0q#
1(&
0)&
b1111111111111111 h#
1O%
b1111111 j#
1W%
0#&
0x#
b0 M%
0Q%
b0 T%
0X%
b0 [%
0_%
b0 b%
0f%
b0 i%
0m%
b0 p%
0t%
b0 w%
0{%
b10 ~%
0$&
0'&
0u#
1P%
0"$
1,$
0b$
0a$
0k$
0j$
0t$
0s$
0}$
0|$
0(%
0'%
01%
00%
0:%
09%
0C%
0B%
0L%
0K%
b0 g#
1#$
b1111111 l#
b1111111 Q#
b0 N#
b0 U#
0~#
0!$
0)$
0;$
0D$
0M$
0V$
0_$
0w#
0h$
0q$
0z$
0%%
0.%
07%
0@%
0I%
0t#
1.$
bx0000000000000110 -'
bx0000000000000110 X'
b11 D"
b11 Z&
b1111111100010010 P&
b1111111100010010 ]&
1}#
1:$
1C$
1L$
1U$
b1111111 R#
b1111111 +&
b100000 O#
b100000 \#
0{#
b0 f#
0&$
08$
0A$
0J$
0S$
0\$
0e$
0n$
0w$
0"%
0+%
04%
0=%
0F%
b0 e#
0-$
b0 i
b0 '#
b0 !'
b11 A
b11 ~"
b110 G"
b110 M"
b110 N
b110 Y"
bx0000000000000110 /'
b0 k'
b0 ,'
b0 T'
b0 C
b0 K#
b0 9&
b11 S&
b100010010 Y&
b100010010 d&
b1111111 C#
b1111111 b#
b0 T#
b0 Z#
b0 Y#
b0 ,&
0|#
0'$
00$
09$
0B$
0K$
0T$
0]$
0f$
0o$
0x$
0#%
0,%
05%
0>%
0G%
b0 D#
b0 d#
0|&
1r"
1=
0o"
0)
1n"
1(
b0 s"
b0 k"
0m"
0x"
0t"
0v"
0w"
0u"
1y"
1p"
b10 l"
b1 q"
b100111011 5"
b100111011 O"
b100111011 A'
b110 E"
b110 O
b0 g'
0k&
0U&
b11 R&
b100010010 O&
b1000100100000000 \&
b100010010 b&
b1111111100010010 a&
b1111111 .&
b1111111 0&
b1111111 /&
b1111111 B
b1111111 J#
b1111111 *&
b100000 M#
b10000000000000 [#
b100000 a#
b100000 `#
b10000001111111 L#
b100 S#
b100 k#
b11 $'
b111000110000 |"
b1000 j"
b11 T"
b110 F"
b110 P"
b1 t&
b1 <"
b1 U"
b110 q&
b110 9"
b10 x&
b10 @"
b110 J&
bx0000000000000110 0'
bx0000000000000110xxxxxxxxxxxxxxxx 1'
bx0000000000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b110 _
b110 I'
b0 <&
b0 Q
b0 l&
b0 +'
b10 D&
b10 X
b10 n&
b10 }&
0C&
0W
1H&
1[
0G&
0Z
b11 K&
b1111111100010101 X&
b11 `
b11 [&
b11 p&
b100010010 =&
b1000100100000 c&
b1001000000000 g&
b100010010 i&
b100010010 h&
b100010010 \
b100010010 Q&
b0 <#
b0 )"
07#
0#"
08#
0$"
b1111111 :#
b1111111 '"
b1111111 ;&
b100 @#
b100 -"
b100 :&
b111000100000 +#
b111000100000 ~
b111000100000 5&
03#
0|
10#
1z
b111 -#
b111 w
b111 6&
1/#
1y
b0 )#
b0 t
b0 E#
b10 *#
b10 u
b10 G#
b101 R"
b101 3"
b101 (#
b1000111000110000 Q"
b1000111000110000 2"
b101 N"
b101 "
b101 C"
b101 :'
1#
1I
#32
b110 -
b110 ["
0#
0I
#33
0K"
0L"
0r
04"
0o
0d
00"
0m
0k
0B"
0q
1*'
1H
1G
b1101100011010 5"
b1101100011010 O"
b1101100011010 A'
b111 G"
b111 M"
b1011 A
b1011 ~"
b110000 O#
b110000 \#
1|&
b100 D"
b100 Z&
b100000 P&
b100000 ]&
0J
b111 E"
b0 s"
b0 k"
0m"
0x"
0t"
0v"
0w"
0u"
1y"
1r"
0p"
0*
0o"
0n"
0(
b1 l"
b1 &
b1 {"
b0 q"
b0 <
b1111000000000000000110110001101000000001001110111000111000110000 -'
b1111000000000000000110110001101000000001001110111000111000110000 X'
b11111 k'
b11111 ,'
b11111 T'
b100 S&
b1111111000100000 Y&
b1111111000100000 d&
b0 N
b0 Y"
b111 F"
b111 P"
b1 #'
b100111011 |"
b0 }"
b0 j"
b1 S"
b110 L
b110 W"
b110 $#
bx C
bx K#
bx 9&
b110000 M#
b11000000000000 [#
b110000 a#
b110000 `#
b11000001111111 L#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /'
b11111 g'
b100 R&
b100000 O&
b1000000000000 \&
b0 `&
b100000 b&
b100000 a&
1k&
1U&
b10 r'
b0 O
b110 N"
b110 "
b110 C"
b110 :'
b110 R"
b110 3"
b110 (#
b100111011 Q"
b100111011 2"
b0 =#
b0 *"
b101 @#
b101 -"
b101 :&
b11 1#
b11 {
b11 7&
b11 "'
b111000110000 +#
b111000110000 ~
b111000110000 5&
13#
1|
0/#
0y
1.#
1x
b0 J&
bx0000000000000000 0'
bx0000000000000000xxxxxxxxxxxxxxxx 1'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b0 _
b0 I'
b1111111 <&
b1111111 Q
b1111111 l&
b1111111 +'
0F&
0Y
1B&
1V
b100 K&
b100100 X&
b100 `
b100 [&
b100 p&
b1111111 M&
b1111111 b
b1111111 T&
b111000100000 =&
b1110001000000000 c&
b10000000000000 g&
b111000100000 i&
b1111111000100000 h&
b111000100000 \
b111000100000 Q&
b111 ?&
b111 S
b111 V&
b111 j&
1A&
1U
b10 t&
b10 <"
b10 U"
b0 q&
b0 9"
b11 x&
b11 @"
1#
1I
#34
b0 4
b0 b"
0#
0I
#35
0Z'
b11111 B'
b11111 \'
b10 b'
0d'
0G'
0_'
0l'
06'
b10 r'
1m'
18'
1p'
1D'
b10 s'
1#
1I
#36
0#
0I
#37
b10 b'
0_'
b1 f'
b10 e'
b11111 ^'
1#
1I
#38
0#
0I
#39
b10 b'
0_'
b10 f'
1#
1I
#40
0#
0I
#41
1W'
1Z'
bx -'
bx X'
1l'
16'
b0 r'
bx c'
bx C'
bx P'
1d'
1G'
1`'
b0 b'
1_'
b11 f'
1#
1I
#42
0#
0I
#43
0`'
0p'
0D'
b0 e'
b0 f'
b0 s'
1d
1%"
1l
10"
1m
1k
1B"
1q
1)'
0*'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx X'
1J
17'
19'
b0 4'
b0 V'
b0 i'
b1100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y'
1#
1I
#44
0#
0I
#45
0Z'
1@
b0 D
b0 P#
b0 4&
1o#
b0 F#
b0 i#
b0 c#
0O%
0V%
0]%
0d%
0k%
0r%
0y%
b0 j#
1K"
1L"
0P%
0W%
0^%
0e%
0l%
0s%
0z%
1r
14"
1o
0#$
0,$
05$
0>$
0G$
0P$
0Y$
b0 l#
b0 Q#
0%"
0l
0r#
bx -'
bx X'
0}#
0($
01$
0:$
0C$
0L$
0U$
b0 R#
b0 +&
b0 O#
b0 \#
0)'
bx /'
1&'
b101 D"
b101 Z&
b110000 P&
b110000 ]&
b0 C#
b0 b#
1R%
1Y%
1`%
1g%
1n%
1u%
1|%
1%&
1$&
b101 S&
b1111111000110000 Y&
b1111111000110000 d&
0W'
bx N
bx Y"
b0 C
b0 K#
b0 9&
b0 .&
b0 0&
b0 /&
b0 B
b0 J#
b0 *&
0|&
b0 M#
b0 [#
b0 a#
b0 `#
b0 L#
b10 i
b10 '#
b10 !'
b110 S#
b110 k#
b101 R&
b110000 O&
b1100000000000 \&
b110000 b&
b110000 a&
0l'
06'
bx O
b0 ;#
b0 ("
b0 :#
b0 '"
b0 ;&
b0 @#
b0 -"
b0 :&
b0 1#
b0 {
b0 7&
b0 "'
b0 +#
b0 ~
b0 5&
03#
0|
00#
0z
b0 2#
b0 -#
b0 w
b0 6&
0.#
0x
b1 )#
b1 t
b1 E#
b0 *#
b0 u
b0 G#
bx J&
bx 3'
bx _
bx I'
b11 D&
b11 X
b11 n&
b11 }&
1F&
1Y
b101 K&
b110101 X&
b101 `
b101 [&
b101 p&
b111000110000 =&
b1110001100000000 c&
b11000000000000 g&
b111000110000 i&
b1111111000110000 h&
b111000110000 \
b111000110000 Q&
1@&
1T
0A&
0U
b1111111 q&
b1111111 9"
b100 x&
b100 @"
0v&
0="
1s&
1;"
b0 8"
b0 m&
b0 H'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx E'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ]'
b11000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y'
1#
1I
#46
0#
0I
#47
0+
0i$
0?
0@
b110 D
b110 P#
b110 4&
0*$
03$
0<$
0E$
0N$
0W$
0`$
0n#
0r$
0{$
0&%
0/%
08%
0A%
0J%
b0 N%
0S%
b0 U%
0Z%
b0 \%
0a%
b0 c%
0h%
b0 j%
0o%
b0 q%
0v%
b0 x%
0}%
b0 !&
0&&
0m#
b110 F#
b110 i#
0o#
0O%
0d%
0k%
0r%
0y%
1p#
0"&
0q#
b0 f#
1(&
0)&
b1111111111111111 h#
0P%
0e%
0l%
0s%
0z%
0#&
0x#
b0 M%
0Q%
b0 T%
0X%
b0 [%
0_%
b0 b%
0f%
b0 i%
0m%
b0 p%
0t%
b0 w%
0{%
b10 ~%
0'&
0u#
b110 c#
0#$
0"$
0+$
04$
0>$
0=$
0G$
0F$
0P$
0O$
0Y$
0X$
0b$
0a$
0k$
0j$
0t$
0s$
0}$
0|$
0(%
0'%
01%
00%
0:%
09%
0C%
0B%
0L%
0K%
b0 g#
0~#
0)$
02$
0;$
0D$
0M$
0V$
0_$
0w#
0h$
0q$
0z$
0%%
0.%
07%
0@%
0I%
0t#
1V%
1]%
b110 j#
07'
09'
1z#
0{#
1%$
0&$
1.$
0/$
17$
08$
1@$
0A$
1I$
0J$
1R$
0S$
1[$
0\$
1d$
0e$
1m$
0n$
1v$
0w$
1!%
0"%
1*%
0+%
13%
04%
1<%
0=%
1E%
0F%
b0 e#
1W%
1^%
0H
0G
bx .'
bx U'
bx E'
bx ]'
bx 4'
bx V'
bx i'
0y#
0$$
0-$
06$
0?$
0H$
0Q$
0Z$
0c$
0l$
0u$
0~$
0)%
02%
0;%
0D%
1,$
15$
b110 l#
b1111111111111011 N#
b1111111111111011 U#
1r#
b1111000000000000 5"
b1111000000000000 O"
b1111000000000000 A'
bx0000000000000000 -'
bx0000000000000000 X'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y'
b0 B'
b0 \'
b0 D"
b0 Z&
b0 P&
b0 ]&
b0 D#
b0 d#
1($
11$
b111011 O#
b111011 \#
b1 h
b1 &#
b1 ~&
b1000 G"
b1000 M"
b0 N
b0 Y"
bx 8"
bx m&
bx H'
bx0000000000000000 /'
b0 k'
b0 ,'
b0 T'
b0 i
b0 '#
b0 !'
b0 S&
b0 Y&
b0 d&
b110 C#
b110 b#
b1011000000000000 T#
b1011 Z#
b1111111111111011 Y#
b1011 ,&
0R%
0Y%
0`%
0g%
0n%
0u%
0|%
0%&
0$&
1{&
b0 s"
b1 k"
b1 %
b1 z"
0m"
0x"
0t"
0v"
0w"
0u"
1y"
1r"
0p"
0o"
0n"
b1 l"
b0 q"
b1010 A
b1010 ~"
b1000 E"
b0 O
b0 g'
0&'
b0 R&
b0 O&
b0 \&
b0 b&
b0 a&
0k&
0U&
b0 C
b0 K#
b0 9&
b11000000000000 .&
b0 0&
b0 /&
b110 B
b110 J#
b110 *&
b111011 M#
b11101100000000 [#
b111011 a#
b111011 `#
b11101100000110 L#
b100 S#
b100 k#
b1 $'
b1011 #'
b101100011010 |"
b101 }"
b1 j"
b1 T"
b110 M
b110 X"
b110 %#
b1011 S"
bx L
bx W"
bx $#
b1000 F"
b1000 P"
b11 t&
b11 <"
b11 U"
b0 r&
b0 :"
b101 x&
b101 @"
1v&
1="
b0 J&
bx0000000000000000 0'
bx0000000000000000xxxxxxxxxxxxxxxx 1'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b0 _
b0 I'
b0 <&
b0 Q
b0 l&
b0 +'
b0 D&
b0 X
b0 n&
b0 }&
0F&
0Y
0B&
0V
b0 K&
b0 X&
b0 `
b0 [&
b0 p&
b0 M&
b0 b
b0 T&
b0 =&
b0 c&
b0 g&
b0 i&
b0 h&
b0 \
b0 Q&
b0 ?&
b0 S
b0 V&
b0 j&
0@&
0T
b10 =#
b10 *"
17#
1#"
18#
1$"
bx ;#
bx ("
b110 :#
b110 '"
b110 ;&
b110 @#
b110 -"
b110 :&
b1011 1#
b1011 {
b1011 7&
b1011 "'
b100111011 +#
b100111011 ~
b100111011 5&
13#
1|
bz 2#
b0 )#
b0 t
b0 E#
b1 *#
b1 u
b1 G#
b111 R"
b111 3"
b111 (#
b1101100011010 Q"
b1101100011010 2"
b111 N"
b111 "
b111 C"
b111 :'
1#
1I
#48
03&
0g
b0 5
b0 c"
0#
0I
#49
1d%
1e%
1>$
0@
b1100 D
b1100 P#
b1100 4&
13$
1<$
0o#
b1100 F#
b1100 i#
0K"
0L"
b1100 f#
b1111111111111001 h#
0r
04"
0o
0d
b1100 c#
00"
0m
0k
0B"
0q
1+$
14$
b110 g#
1*'
1)$
12$
0V%
1]%
b1100 j#
b11 r'
0%$
1&$
0.$
1/$
b110 e#
0W%
1^%
0s
0@'
1''
1$$
1-$
0,$
15$
b1100 l#
b1111111111111010 N#
b1111111111111010 U#
0r#
bx <'
bx L'
bx ='
bx M'
bx j'
b1001 G"
b1001 M"
b110 D#
b110 d#
1($
11$
b11010 O#
b11010 \#
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx X'
b1 B'
b1 \'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q'
b110 D"
b110 Z&
b1111111100111011 P&
b1111111100111011 ]&
bx 5"
bx O"
bx A'
b1001 E"
b0 s"
b0 k"
b0 %
b0 z"
0m"
0x"
0t"
0v"
0w"
0u"
0y"
0J"
0r"
0=
0p"
0o"
0n"
b0 l"
b0 &
b0 {"
b0 q"
b0 A
b0 ~"
b110 C#
b110 b#
b1010000000000000 T#
b1010 Z#
b1111111111111010 Y#
b1010 ,&
1R%
1Y%
1`%
1g%
1n%
1u%
1|%
1%&
1$&
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /'
b1 k'
b1 ,'
b1 T'
b10 n'
b10 ;'
b10 J'
b0 h
b0 &#
b0 ~&
b110 S&
b100111011 Y&
b100111011 d&
b10 h'
b1001 F"
b1001 P"
b0 $'
b0 #'
b0 |"
b0 }"
b1111 j"
b0 T"
b0 M
b0 X"
b0 %#
b0 S"
b0 L
b0 W"
b0 $#
b110 C
b110 K#
b110 9&
b1100000000000 .&
b110 B
b110 J#
b110 *&
0{&
b11010 M#
b1101000000000 [#
b11010 a#
b11010 `#
b1101000000110 L#
b110 S#
b110 k#
b1 g'
0%'
1k&
1U&
b110 R&
b100111011 O&
b1001110110000000 \&
b1100000000000000 `&
b100111011 b&
b1111111100111011 a&
b1000 N"
b1000 "
b1000 C"
b1000 :'
b1000 R"
b1000 3"
b1000 (#
b1111000000000000 Q"
b1111000000000000 2"
b0 =#
b0 *"
b1 <#
b1 )"
07#
0#"
08#
0$"
b110 ;#
b110 ("
bx :#
bx '"
bx ;&
b111 @#
b111 -"
b111 :&
b1010 1#
b1010 {
b1010 7&
b1010 "'
b101100011010 +#
b101100011010 ~
b101100011010 5&
b101 -#
b101 w
b101 6&
b1 )#
b1 t
b1 E#
b110 <&
b110 Q
b110 l&
b110 +'
b1011 D&
b1011 X
b1011 n&
b1011 }&
1F&
1Y
0H&
0[
b110 K&
b1111111101000001 X&
b110 `
b110 [&
b110 p&
b110 M&
b110 b
b110 T&
b100111011 =&
b1001110110000 c&
b11101100000000 g&
b100111011 i&
b100111011 h&
b100111011 \
b100111011 Q&
b0 t&
b0 <"
b0 U"
bx r&
bx :"
b0 q&
b0 9"
b0 x&
b0 @"
0v&
0="
0s&
0;"
1#
1I
#50
0#
0I
#51
0R'
b10 B'
b10 \'
b10 b'
0d'
0G'
0_'
0o'
0?'
b11 r'
0m'
08'
1p'
1D'
b11 s'
1#
1I
#52
0#
0I
#53
b10 b'
0_'
b1 f'
b10 e'
b10 ^'
1#
1I
#54
0#
0I
#55
b10 b'
0_'
b10 f'
1#
1I
#56
0#
0I
#57
1O'
1R'
1o'
1?'
b0 r'
1d'
1G'
1`'
b0 b'
1_'
b11 f'
1#
1I
#58
0#
0I
#59
0R'
0O'
0`'
0o'
0?'
0p'
0D'
b0 e'
b0 f'
b0 s'
1K"
1L"
1r
14"
1o
1d
10"
1m
1k
1B"
1q
0*'
1s
1@'
b0 ='
b0 M'
b0 j'
b1000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q'
1#
1I
#60
0#
0I
#61
1@
b0 D
b0 P#
b0 4&
1o#
b0 F#
b0 i#
b0 c#
0d%
0]%
b0 j#
0e%
0^%
0>$
05$
b0 l#
0<$
03$
b0 f#
b1111111111111111 h#
xG
04$
xH
0+$
b0 g#
b0 N#
b0 U#
1r#
0)$
02$
b1010 G"
b1010 M"
0($
01$
b0 O#
b0 \#
1%$
0&$
1.$
0/$
b0 e#
bx0000000000000110 -'
bx0000000000000110 X'
b111 D"
b111 Z&
b1111111100011010 P&
b1111111100011010 ]&
b1010 E"
bx A
bx ~"
b0 C#
b0 b#
b0 i
b0 '#
b0 !'
b0 T#
b0 Z#
b0 Y#
b0 ,&
0R%
0Y%
0`%
0g%
0n%
0u%
0|%
0%&
0$&
0$$
0-$
bx0000000000000110 /'
b11 k'
b11 ,'
b11 T'
b111 S&
b1111101100011010 Y&
b1111101100011010 d&
b110 N
b110 Y"
b1010 F"
b1010 P"
bx $'
bx #'
bx |"
bx }"
bx j"
bx T"
bx M
bx X"
bx %#
bx S"
bx L
bx W"
bx $#
b0 .&
b0 B
b0 J#
b0 *&
b0 C
b0 K#
b0 9&
0|&
b0 M#
b0 [#
b0 a#
b0 `#
b0 L#
b100 S#
b100 k#
b0 D#
b0 d#
b11 g'
b111 R&
b100011010 O&
b1000110100000000 \&
b1000000000000000 `&
b100011010 b&
b1111111100011010 a&
0k&
0U&
b110 O
b1001 N"
b1001 "
b1001 C"
b1001 :'
b1001 R"
b1001 3"
b1001 (#
bx Q"
bx 2"
b0 <#
b0 )"
b0 ;#
b0 ("
b0 :#
b0 '"
b0 ;&
b1000 @#
b1000 -"
b1000 :&
b0 1#
b0 {
b0 7&
b0 "'
b0 +#
b0 ~
b0 5&
0B#
0/"
03#
0|
b0 -#
b0 w
b0 6&
b0 )#
b0 t
b0 E#
b0 *#
b0 u
b0 G#
b110 J&
bx0000000000000110 0'
bx0000000000000110xxxxxxxxxxxxxxxx 1'
bx0000000000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b110 _
b110 I'
b1100 <&
b1100 Q
b1100 l&
b1100 +'
b1010 D&
b1010 X
b1010 n&
b1010 }&
b111 K&
b1111111100100001 X&
b111 `
b111 [&
b111 p&
bx M&
bx b
bx T&
b101100011010 =&
b1011000110100000 c&
b1101000000000 g&
b101100011010 i&
b1111101100011010 h&
b101100011010 \
b101100011010 Q&
b101 ?&
b101 S
b101 V&
b101 j&
b1011 t&
b1011 <"
b1011 U"
b110 q&
b110 9"
b110 x&
b110 @"
1v&
1="
1#
1I
#62
b110 /
b110 ]"
0#
0I
#63
x+
x@
bx D
bx P#
bx 4&
bx F#
bx i#
xo#
xi$
bx c#
x?
x*$
x3$
x<$
xE$
xN$
xW$
x`$
xr$
x{$
x&%
x/%
x8%
xA%
xJ%
xS%
xZ%
xa%
xh%
xo%
xv%
x}%
x&&
xm#
bx N%
bx U%
bx \%
bx c%
bx j%
bx q%
bx x%
bx !&
xn#
xO%
xV%
x]%
xd%
xk%
xr%
xy%
xp#
x"&
xq#
bx0 f#
x(&
x)&
bx j#
bx h#
xP%
xW%
x^%
xe%
xl%
xs%
xz%
x#&
xx#
bx M%
xQ%
bx T%
xX%
bx [%
x_%
bx b%
xf%
bx i%
xm%
bx p%
xt%
bx w%
x{%
bx ~%
x$&
x'&
xu#
x#$
x"$
x,$
x+$
x5$
x4$
x>$
x=$
xG$
xF$
xP$
xO$
xY$
xX$
xb$
xa$
xk$
xj$
xt$
xs$
x}$
x|$
x(%
x'%
x1%
x0%
x:%
x9%
xC%
xB%
xL%
bx l#
xK%
bx g#
bx Q#
bx N#
bx U#
b1000 D"
b1000 Z&
b0 P&
b0 ]&
x}#
x($
x1$
x:$
xC$
xL$
xU$
x^$
xg$
xp$
xy$
x$%
x-%
x6%
x?%
xH%
xs#
xv#
bx R#
bx +&
bx O#
bx \#
b1011 G"
b1011 M"
b1100 N
b1100 Y"
bx0000000000000000 -'
bx0000000000000000 X'
b0 k'
b0 ,'
b0 T'
b1000 S&
b0 Y&
b0 d&
bx C#
bx b#
bx000000000000 T#
b0xxxx Z#
bx Y#
bx ,&
b1011 E"
b1100 O
bx0000000000000000 /'
b0 g'
b1000 R&
b0 O&
b0 \&
b0 `&
b0 b&
b0 a&
1k&
1U&
bx C
bx K#
bx 9&
bx .&
bx 0&
bx /&
bx B
bx J#
bx *&
bx M#
bx00000000 [#
b0xxxxxxxx a#
bx `#
bx L#
b1011 F"
b1011 P"
b1010 t&
b1010 <"
b1010 U"
b1100 q&
b1100 9"
b111 x&
b111 @"
b0 J&
bx0000000000000000 0'
bx0000000000000000xxxxxxxxxxxxxxxx 1'
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3'
b0 _
b0 I'
b0 <&
b0 Q
b0 l&
b0 +'
b0 D&
b0 X
b0 n&
b0 }&
0N&
0c
0F&
0Y
b1000 K&
b1000 X&
b1000 `
b1000 [&
b1000 p&
b0 M&
b0 b
b0 T&
b0 =&
b0 c&
b0 g&
b0 i&
b0 h&
b0 \
b0 Q&
b0 ?&
b0 S
b0 V&
b0 j&
x7#
x#"
x8#
x$"
bx ;#
bx ("
bx :#
bx '"
bx ;&
b1001 @#
b1001 -"
b1001 :&
bx 1#
bx {
bx 7&
bx "'
bx +#
bx ~
bx 5&
bx -#
bx w
bx 6&
b1010 R"
b1010 3"
b1010 (#
b1010 N"
b1010 "
b1010 C"
b1010 :'
1#
1I
#64
b1100 .
b1100 \"
0#
0I
#65
x7'
x9'
b1100 G"
b1100 M"
bx Y'
b1001 D"
b1001 Z&
bx P&
bx ]&
b1100 E"
bx -'
bx X'
bx k'
bx ,'
bx T'
b1001 S&
bx Y&
bx d&
b0 N
b0 Y"
0K"
0L"
b1100 F"
b1100 P"
bx /'
bx g'
b1001 R&
bx O&
bx0000000 \&
bx00000000000000 `&
b0xxxxxxxxx b&
bx a&
b0 O
1!
b1011 N"
b1011 "
b1011 C"
b1011 :'
b1011 R"
b1011 3"
b1011 (#
b1010 @#
b1010 -"
b1010 :&
bx J&
bx 0'
bx 1'
bx 2'
bx 3'
bx _
bx I'
bx <&
bx Q
bx l&
bx +'
bx D&
bx X
bx n&
bx }&
b1001 K&
bx X&
b1001 `
b1001 [&
b1001 p&
bx M&
bx b
bx T&
bx =&
bx0000 c&
bx00000000 g&
b0xxxxxxxxxxxx i&
bx h&
bx \
bx Q&
bx ?&
bx S
bx V&
bx j&
b0 t&
b0 <"
b0 U"
b0 q&
b0 9"
b1000 x&
b1000 @"
0y&
0A"
0v&
0="
1#
1I
#66
0#
0I
#67
b1010 D"
b1010 Z&
bx N
bx Y"
b1010 S&
bx O
b1010 R&
bx t&
bx <"
bx U"
bx q&
bx 9"
b1001 x&
b1001 @"
b1010 K&
b1010 `
b1010 [&
b1010 p&
b1011 @#
b1011 -"
b1011 :&
b1100 R"
b1100 3"
b1100 (#
1#
1I
